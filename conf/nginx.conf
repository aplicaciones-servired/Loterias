events {
  worker_connections 1024;
}

http {
  include       mime.types;
  default_type  application/octet-stream;

  # Serve ACME challenges from webroot
  server {
    listen 80;
    server_name loteria.serviredgane.cloud;

    root /usr/share/nginx/html;
    index index.html;
    try_files $uri $uri/ /index.html;

    # Allow Let's Encrypt HTTP-01 challenge files
    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
      try_files $uri =404;
    }

    location /api/ {
      proxy_pass http://loteria-server-1:3000/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    location /api_login_v/ {
      proxy_pass http://api_login_v2:80/api/v1/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }

  # Optional HTTPS server block (will be activated after obtaining certs)
  server {
    listen 443 ssl;
    server_name loteria.serviredgane.cloud;

    ssl_certificate /etc/letsencrypt/live/loteria.serviredgane.cloud/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/loteria.serviredgane.cloud/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    root /usr/share/nginx/html;
    index index.html;
    try_files $uri $uri/ /index.html;

    location /api/ {
      proxy_pass http://loteria-server-1:3000/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }

    location /api_login_v/ {
      proxy_pass http://api_login_v2:80/api/v1/;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;
    }
  }
}
